/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 1.50 $ of : mfd-top.m2c,v $
 *
 * $Id:$
 */
#ifndef DOT1DTPPORTTABLE_H
#define DOT1DTPPORTTABLE_H

#ifdef __cplusplus
extern "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

/* other required module components */
    /* *INDENT-OFF*  */
config_add_mib(BRIDGE-MIB)
config_require(BRIDGE-MIB/dot1dTpPortTable/dot1dTpPortTable_interface)
config_require(BRIDGE-MIB/dot1dTpPortTable/dot1dTpPortTable_data_access)
config_require(BRIDGE-MIB/dot1dTpPortTable/dot1dTpPortTable_data_get)
config_require(BRIDGE-MIB/dot1dTpPortTable/dot1dTpPortTable_data_set)
    /* *INDENT-ON*  */

/* OID and column number definitions for dot1dTpPortTable */
#include "dot1dTpPortTable_oids.h"

/* enum definions */
#include "dot1dTpPortTable_enums.h"

/* *********************************************************************
 * function declarations
 */
void init_dot1dTpPortTable(void);
void shutdown_dot1dTpPortTable(void);

/* *********************************************************************
 * Table declarations
 */
/**********************************************************************
 **********************************************************************
 ***
 *** Table dot1dTpPortTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * BRIDGE-MIB::dot1dTpPortTable is subid 4 of dot1dTp.
 * Its status is Current.
 * OID: .1.3.6.1.2.1.17.4.4, length: 9
*/
/* *********************************************************************
 * When you register your mib, you get to provide a generic
 * pointer that will be passed back to you for most of the
 * functions calls.
 *
 * TODO:100:r: Review all context structures
 */
    /*
     * TODO:101:o: |-> Review dot1dTpPortTable registration context.
     */
typedef netsnmp_data_list dot1dTpPortTable_registration;

/**********************************************************************/
/*
 * TODO:110:r: |-> Review dot1dTpPortTable data context structure.
 * This structure is used to represent the data for dot1dTpPortTable.
 */
/*
 * This structure contains storage for all the columns defined in the
 * dot1dTpPortTable.
 */
typedef struct dot1dTpPortTable_data_s {
    
        /*
         * dot1dTpPortMaxInfo(2)/INTEGER32/ASN_INTEGER/long(long)//l/A/w/e/r/d/h
         */
   long   dot1dTpPortMaxInfo;
    
        /*
         * dot1dTpPortInFrames(3)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   dot1dTpPortInFrames;
    
        /*
         * dot1dTpPortOutFrames(4)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   dot1dTpPortOutFrames;
    
        /*
         * dot1dTpPortInDiscards(5)/COUNTER/ASN_COUNTER/u_long(u_long)//l/A/w/e/r/d/h
         */
   u_long   dot1dTpPortInDiscards;
    
} dot1dTpPortTable_data;


/*
 * TODO:120:r: |-> Review dot1dTpPortTable mib index.
 * This structure is used to represent the index for dot1dTpPortTable.
 */
typedef struct dot1dTpPortTable_mib_index_s {

        /*
         * dot1dTpPort(1)/INTEGER32/ASN_INTEGER/long(long)//l/A/w/e/R/d/h
         */
   long   dot1dTpPort;


} dot1dTpPortTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review dot1dTpPortTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
*/
#define MAX_dot1dTpPortTable_IDX_LEN     1


/* *********************************************************************
 * TODO:130:o: |-> Review dot1dTpPortTable Row request (rowreq) context.
 * When your functions are called, you will be passed a
 * dot1dTpPortTable_rowreq_ctx pointer.
 */
typedef struct dot1dTpPortTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
    netsnmp_index        oid_idx;
    oid                  oid_tmp[MAX_dot1dTpPortTable_IDX_LEN];
    
    dot1dTpPortTable_mib_index        tbl_idx;
    
    dot1dTpPortTable_data              data;

    /*
     * flags per row. Currently, the first (lower) 8 bits are reserved
     * for the user. See mfd.h for other flags.
     */
    u_int                       rowreq_flags;

    /*
     * TODO:131:o: |   |-> Add useful data to dot1dTpPortTable rowreq context.
     */
    
    /*
     * storage for future expansion
     */
    netsnmp_data_list             *dot1dTpPortTable_data_list;

} dot1dTpPortTable_rowreq_ctx;

typedef struct dot1dTpPortTable_ref_rowreq_ctx_s {
    dot1dTpPortTable_rowreq_ctx *rowreq_ctx;
} dot1dTpPortTable_ref_rowreq_ctx;

/* *********************************************************************
 * function prototypes
 */
    int dot1dTpPortTable_pre_request(dot1dTpPortTable_registration * user_context);
    int dot1dTpPortTable_post_request(dot1dTpPortTable_registration * user_context,
        int rc);

    int dot1dTpPortTable_rowreq_ctx_init(dot1dTpPortTable_rowreq_ctx *rowreq_ctx,
                                   void *user_init_ctx);
    void dot1dTpPortTable_rowreq_ctx_cleanup(dot1dTpPortTable_rowreq_ctx *rowreq_ctx);


    dot1dTpPortTable_rowreq_ctx *
                  dot1dTpPortTable_row_find_by_mib_index(dot1dTpPortTable_mib_index *mib_idx);

extern oid dot1dTpPortTable_oid[];
extern int dot1dTpPortTable_oid_size;


#include "dot1dTpPortTable_interface.h"
#include "dot1dTpPortTable_data_access.h"
#include "dot1dTpPortTable_data_get.h"
#include "dot1dTpPortTable_data_set.h"

/*
 * DUMMY markers, ignore
 *
 * TODO:099:x: *************************************************************
 * TODO:199:x: *************************************************************
 * TODO:299:x: *************************************************************
 * TODO:399:x: *************************************************************
 * TODO:499:x: *************************************************************
 */

#ifdef __cplusplus
}
#endif

#endif /* DOT1DTPPORTTABLE_H */
/** @} */
