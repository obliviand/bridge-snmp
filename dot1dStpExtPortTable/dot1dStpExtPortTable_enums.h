/*
 * Note: this file originally auto-generated by mib2c using
 *  : generic-table-enums.m2c,v 1.4 2005/07/15 22:41:16 rstory Exp $
 *
 * $Id:$
 */
#ifndef DOT1DSTPEXTPORTTABLE_ENUMS_H
#define DOT1DSTPEXTPORTTABLE_ENUMS_H

#ifdef __cplusplus
extern "C" {
#endif

 /*
 * NOTES on enums
 * ==============
 *
 * Value Mapping
 * -------------
 * If the values for your data type don't exactly match the
 * possible values defined by the mib, you should map them
 * below. For example, a boolean flag (1/0) is usually represented
 * as a TruthValue in a MIB, which maps to the values (1/2).
 *
 */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table dot1dStpExtPortTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * dot1dStpPortProtocolMigration (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TruthValue_ENUMS
#define TruthValue_ENUMS

#define TruthValue_TRUE		1 
#define TruthValue_FALSE	2 

#endif /* TruthValue_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * dot1dStpPortAdminPointToPoint (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef dot1dStpPortAdminPointToPoint_ENUMS
#define dot1dStpPortAdminPointToPoint_ENUMS

#define dot1dStpPortAdminPointToPoint_FORCETRUE		0
#define dot1dStpPortAdminPointToPoint_FORCEFALSE	1
#define dot1dStpPortAdminPointToPoint_AUTO		2

#endif /* _ENUMS */

#ifdef __cplusplus
}
#endif

#endif /* DOT1DSTPEXTPORTTABLE_ENUMS_H */
